// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stat_data.proto

#ifndef PROTOBUF_stat_5fdata_2eproto__INCLUDED
#define PROTOBUF_stat_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "game_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protocols {
namespace statistics {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_stat_5fdata_2eproto();
void protobuf_AssignDesc_stat_5fdata_2eproto();
void protobuf_ShutdownFile_stat_5fdata_2eproto();

class PlayerStatBaseInfo;
class EquipStrengthInfo;

// ===================================================================

class PlayerStatBaseInfo : public ::google::protobuf::Message {
 public:
  PlayerStatBaseInfo();
  virtual ~PlayerStatBaseInfo();
  
  PlayerStatBaseInfo(const PlayerStatBaseInfo& from);
  
  inline PlayerStatBaseInfo& operator=(const PlayerStatBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerStatBaseInfo& default_instance();
  
  void Swap(PlayerStatBaseInfo* other);
  
  // implements Message ----------------------------------------------
  
  PlayerStatBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerStatBaseInfo& from);
  void MergeFrom(const PlayerStatBaseInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 role_id = 1 [default = 0];
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 profession = 2 [default = 0];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 2;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);
  
  // optional int32 quality = 3 [default = 0];
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);
  
  // optional int32 prof_level = 4 [default = 0];
  inline bool has_prof_level() const;
  inline void clear_prof_level();
  static const int kProfLevelFieldNumber = 4;
  inline ::google::protobuf::int32 prof_level() const;
  inline void set_prof_level(::google::protobuf::int32 value);
  
  // optional int32 cur_soul = 5 [default = 0];
  inline bool has_cur_soul() const;
  inline void clear_cur_soul();
  static const int kCurSoulFieldNumber = 5;
  inline ::google::protobuf::int32 cur_soul() const;
  inline void set_cur_soul(::google::protobuf::int32 value);
  
  // optional int32 max_soul = 6 [default = 0];
  inline bool has_max_soul() const;
  inline void clear_max_soul();
  static const int kMaxSoulFieldNumber = 6;
  inline ::google::protobuf::int32 max_soul() const;
  inline void set_max_soul(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.statistics.PlayerStatBaseInfo)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_prof_level();
  inline void clear_has_prof_level();
  inline void set_has_cur_soul();
  inline void clear_has_cur_soul();
  inline void set_has_max_soul();
  inline void clear_has_max_soul();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 profession_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 prof_level_;
  ::google::protobuf::int32 cur_soul_;
  ::google::protobuf::int32 max_soul_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_stat_5fdata_2eproto();
  friend void protobuf_AssignDesc_stat_5fdata_2eproto();
  friend void protobuf_ShutdownFile_stat_5fdata_2eproto();
  
  void InitAsDefaultInstance();
  static PlayerStatBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipStrengthInfo : public ::google::protobuf::Message {
 public:
  EquipStrengthInfo();
  virtual ~EquipStrengthInfo();
  
  EquipStrengthInfo(const EquipStrengthInfo& from);
  
  inline EquipStrengthInfo& operator=(const EquipStrengthInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipStrengthInfo& default_instance();
  
  void Swap(EquipStrengthInfo* other);
  
  // implements Message ----------------------------------------------
  
  EquipStrengthInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipStrengthInfo& from);
  void MergeFrom(const EquipStrengthInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 helmet = 1 [default = 0];
  inline bool has_helmet() const;
  inline void clear_helmet();
  static const int kHelmetFieldNumber = 1;
  inline ::google::protobuf::int32 helmet() const;
  inline void set_helmet(::google::protobuf::int32 value);
  
  // optional int32 helmet_level = 2 [default = 0];
  inline bool has_helmet_level() const;
  inline void clear_helmet_level();
  static const int kHelmetLevelFieldNumber = 2;
  inline ::google::protobuf::int32 helmet_level() const;
  inline void set_helmet_level(::google::protobuf::int32 value);
  
  // optional int32 necklace = 3 [default = 0];
  inline bool has_necklace() const;
  inline void clear_necklace();
  static const int kNecklaceFieldNumber = 3;
  inline ::google::protobuf::int32 necklace() const;
  inline void set_necklace(::google::protobuf::int32 value);
  
  // optional int32 necklace_level = 4 [default = 0];
  inline bool has_necklace_level() const;
  inline void clear_necklace_level();
  static const int kNecklaceLevelFieldNumber = 4;
  inline ::google::protobuf::int32 necklace_level() const;
  inline void set_necklace_level(::google::protobuf::int32 value);
  
  // optional int32 shoulder_guards = 7 [default = 0];
  inline bool has_shoulder_guards() const;
  inline void clear_shoulder_guards();
  static const int kShoulderGuardsFieldNumber = 7;
  inline ::google::protobuf::int32 shoulder_guards() const;
  inline void set_shoulder_guards(::google::protobuf::int32 value);
  
  // optional int32 shoulder_guards_level = 8 [default = 0];
  inline bool has_shoulder_guards_level() const;
  inline void clear_shoulder_guards_level();
  static const int kShoulderGuardsLevelFieldNumber = 8;
  inline ::google::protobuf::int32 shoulder_guards_level() const;
  inline void set_shoulder_guards_level(::google::protobuf::int32 value);
  
  // optional int32 armor = 9 [default = 0];
  inline bool has_armor() const;
  inline void clear_armor();
  static const int kArmorFieldNumber = 9;
  inline ::google::protobuf::int32 armor() const;
  inline void set_armor(::google::protobuf::int32 value);
  
  // optional int32 armor_level = 10 [default = 0];
  inline bool has_armor_level() const;
  inline void clear_armor_level();
  static const int kArmorLevelFieldNumber = 10;
  inline ::google::protobuf::int32 armor_level() const;
  inline void set_armor_level(::google::protobuf::int32 value);
  
  // optional int32 waistband = 11 [default = 0];
  inline bool has_waistband() const;
  inline void clear_waistband();
  static const int kWaistbandFieldNumber = 11;
  inline ::google::protobuf::int32 waistband() const;
  inline void set_waistband(::google::protobuf::int32 value);
  
  // optional int32 waistband_level = 12 [default = 0];
  inline bool has_waistband_level() const;
  inline void clear_waistband_level();
  static const int kWaistbandLevelFieldNumber = 12;
  inline ::google::protobuf::int32 waistband_level() const;
  inline void set_waistband_level(::google::protobuf::int32 value);
  
  // optional int32 weapon = 13 [default = 0];
  inline bool has_weapon() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 13;
  inline ::google::protobuf::int32 weapon() const;
  inline void set_weapon(::google::protobuf::int32 value);
  
  // optional int32 weapon_level = 14 [default = 0];
  inline bool has_weapon_level() const;
  inline void clear_weapon_level();
  static const int kWeaponLevelFieldNumber = 14;
  inline ::google::protobuf::int32 weapon_level() const;
  inline void set_weapon_level(::google::protobuf::int32 value);
  
  // optional int32 assist_weapon = 25 [default = 0];
  inline bool has_assist_weapon() const;
  inline void clear_assist_weapon();
  static const int kAssistWeaponFieldNumber = 25;
  inline ::google::protobuf::int32 assist_weapon() const;
  inline void set_assist_weapon(::google::protobuf::int32 value);
  
  // optional int32 assist_weapon_level = 26 [default = 0];
  inline bool has_assist_weapon_level() const;
  inline void clear_assist_weapon_level();
  static const int kAssistWeaponLevelFieldNumber = 26;
  inline ::google::protobuf::int32 assist_weapon_level() const;
  inline void set_assist_weapon_level(::google::protobuf::int32 value);
  
  // optional int32 gloves = 15 [default = 0];
  inline bool has_gloves() const;
  inline void clear_gloves();
  static const int kGlovesFieldNumber = 15;
  inline ::google::protobuf::int32 gloves() const;
  inline void set_gloves(::google::protobuf::int32 value);
  
  // optional int32 gloves_level = 16 [default = 0];
  inline bool has_gloves_level() const;
  inline void clear_gloves_level();
  static const int kGlovesLevelFieldNumber = 16;
  inline ::google::protobuf::int32 gloves_level() const;
  inline void set_gloves_level(::google::protobuf::int32 value);
  
  // optional int32 wrist_band = 17 [default = 0];
  inline bool has_wrist_band() const;
  inline void clear_wrist_band();
  static const int kWristBandFieldNumber = 17;
  inline ::google::protobuf::int32 wrist_band() const;
  inline void set_wrist_band(::google::protobuf::int32 value);
  
  // optional int32 wrist_level = 18 [default = 0];
  inline bool has_wrist_level() const;
  inline void clear_wrist_level();
  static const int kWristLevelFieldNumber = 18;
  inline ::google::protobuf::int32 wrist_level() const;
  inline void set_wrist_level(::google::protobuf::int32 value);
  
  // optional int32 ring_1_id = 19 [default = 0];
  inline bool has_ring_1_id() const;
  inline void clear_ring_1_id();
  static const int kRing1IdFieldNumber = 19;
  inline ::google::protobuf::int32 ring_1_id() const;
  inline void set_ring_1_id(::google::protobuf::int32 value);
  
  // optional int32 ring_1_level = 20 [default = 0];
  inline bool has_ring_1_level() const;
  inline void clear_ring_1_level();
  static const int kRing1LevelFieldNumber = 20;
  inline ::google::protobuf::int32 ring_1_level() const;
  inline void set_ring_1_level(::google::protobuf::int32 value);
  
  // optional int32 ring_2_id = 21 [default = 0];
  inline bool has_ring_2_id() const;
  inline void clear_ring_2_id();
  static const int kRing2IdFieldNumber = 21;
  inline ::google::protobuf::int32 ring_2_id() const;
  inline void set_ring_2_id(::google::protobuf::int32 value);
  
  // optional int32 ring_2_level = 22 [default = 0];
  inline bool has_ring_2_level() const;
  inline void clear_ring_2_level();
  static const int kRing2LevelFieldNumber = 22;
  inline ::google::protobuf::int32 ring_2_level() const;
  inline void set_ring_2_level(::google::protobuf::int32 value);
  
  // optional int32 shoes = 23 [default = 0];
  inline bool has_shoes() const;
  inline void clear_shoes();
  static const int kShoesFieldNumber = 23;
  inline ::google::protobuf::int32 shoes() const;
  inline void set_shoes(::google::protobuf::int32 value);
  
  // optional int32 shoes_level = 24 [default = 0];
  inline bool has_shoes_level() const;
  inline void clear_shoes_level();
  static const int kShoesLevelFieldNumber = 24;
  inline ::google::protobuf::int32 shoes_level() const;
  inline void set_shoes_level(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.statistics.EquipStrengthInfo)
 private:
  inline void set_has_helmet();
  inline void clear_has_helmet();
  inline void set_has_helmet_level();
  inline void clear_has_helmet_level();
  inline void set_has_necklace();
  inline void clear_has_necklace();
  inline void set_has_necklace_level();
  inline void clear_has_necklace_level();
  inline void set_has_shoulder_guards();
  inline void clear_has_shoulder_guards();
  inline void set_has_shoulder_guards_level();
  inline void clear_has_shoulder_guards_level();
  inline void set_has_armor();
  inline void clear_has_armor();
  inline void set_has_armor_level();
  inline void clear_has_armor_level();
  inline void set_has_waistband();
  inline void clear_has_waistband();
  inline void set_has_waistband_level();
  inline void clear_has_waistband_level();
  inline void set_has_weapon();
  inline void clear_has_weapon();
  inline void set_has_weapon_level();
  inline void clear_has_weapon_level();
  inline void set_has_assist_weapon();
  inline void clear_has_assist_weapon();
  inline void set_has_assist_weapon_level();
  inline void clear_has_assist_weapon_level();
  inline void set_has_gloves();
  inline void clear_has_gloves();
  inline void set_has_gloves_level();
  inline void clear_has_gloves_level();
  inline void set_has_wrist_band();
  inline void clear_has_wrist_band();
  inline void set_has_wrist_level();
  inline void clear_has_wrist_level();
  inline void set_has_ring_1_id();
  inline void clear_has_ring_1_id();
  inline void set_has_ring_1_level();
  inline void clear_has_ring_1_level();
  inline void set_has_ring_2_id();
  inline void clear_has_ring_2_id();
  inline void set_has_ring_2_level();
  inline void clear_has_ring_2_level();
  inline void set_has_shoes();
  inline void clear_has_shoes();
  inline void set_has_shoes_level();
  inline void clear_has_shoes_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 helmet_;
  ::google::protobuf::int32 helmet_level_;
  ::google::protobuf::int32 necklace_;
  ::google::protobuf::int32 necklace_level_;
  ::google::protobuf::int32 shoulder_guards_;
  ::google::protobuf::int32 shoulder_guards_level_;
  ::google::protobuf::int32 armor_;
  ::google::protobuf::int32 armor_level_;
  ::google::protobuf::int32 waistband_;
  ::google::protobuf::int32 waistband_level_;
  ::google::protobuf::int32 weapon_;
  ::google::protobuf::int32 weapon_level_;
  ::google::protobuf::int32 assist_weapon_;
  ::google::protobuf::int32 assist_weapon_level_;
  ::google::protobuf::int32 gloves_;
  ::google::protobuf::int32 gloves_level_;
  ::google::protobuf::int32 wrist_band_;
  ::google::protobuf::int32 wrist_level_;
  ::google::protobuf::int32 ring_1_id_;
  ::google::protobuf::int32 ring_1_level_;
  ::google::protobuf::int32 ring_2_id_;
  ::google::protobuf::int32 ring_2_level_;
  ::google::protobuf::int32 shoes_;
  ::google::protobuf::int32 shoes_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(24 + 31) / 32];
  
  friend void  protobuf_AddDesc_stat_5fdata_2eproto();
  friend void protobuf_AssignDesc_stat_5fdata_2eproto();
  friend void protobuf_ShutdownFile_stat_5fdata_2eproto();
  
  void InitAsDefaultInstance();
  static EquipStrengthInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerStatBaseInfo

// required int32 role_id = 1 [default = 0];
inline bool PlayerStatBaseInfo::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerStatBaseInfo::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerStatBaseInfo::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerStatBaseInfo::clear_role_id() {
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 PlayerStatBaseInfo::role_id() const {
  return role_id_;
}
inline void PlayerStatBaseInfo::set_role_id(::google::protobuf::int32 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional int32 profession = 2 [default = 0];
inline bool PlayerStatBaseInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerStatBaseInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerStatBaseInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerStatBaseInfo::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 PlayerStatBaseInfo::profession() const {
  return profession_;
}
inline void PlayerStatBaseInfo::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
}

// optional int32 quality = 3 [default = 0];
inline bool PlayerStatBaseInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerStatBaseInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerStatBaseInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerStatBaseInfo::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 PlayerStatBaseInfo::quality() const {
  return quality_;
}
inline void PlayerStatBaseInfo::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 prof_level = 4 [default = 0];
inline bool PlayerStatBaseInfo::has_prof_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerStatBaseInfo::set_has_prof_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerStatBaseInfo::clear_has_prof_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerStatBaseInfo::clear_prof_level() {
  prof_level_ = 0;
  clear_has_prof_level();
}
inline ::google::protobuf::int32 PlayerStatBaseInfo::prof_level() const {
  return prof_level_;
}
inline void PlayerStatBaseInfo::set_prof_level(::google::protobuf::int32 value) {
  set_has_prof_level();
  prof_level_ = value;
}

// optional int32 cur_soul = 5 [default = 0];
inline bool PlayerStatBaseInfo::has_cur_soul() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerStatBaseInfo::set_has_cur_soul() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerStatBaseInfo::clear_has_cur_soul() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerStatBaseInfo::clear_cur_soul() {
  cur_soul_ = 0;
  clear_has_cur_soul();
}
inline ::google::protobuf::int32 PlayerStatBaseInfo::cur_soul() const {
  return cur_soul_;
}
inline void PlayerStatBaseInfo::set_cur_soul(::google::protobuf::int32 value) {
  set_has_cur_soul();
  cur_soul_ = value;
}

// optional int32 max_soul = 6 [default = 0];
inline bool PlayerStatBaseInfo::has_max_soul() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerStatBaseInfo::set_has_max_soul() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerStatBaseInfo::clear_has_max_soul() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerStatBaseInfo::clear_max_soul() {
  max_soul_ = 0;
  clear_has_max_soul();
}
inline ::google::protobuf::int32 PlayerStatBaseInfo::max_soul() const {
  return max_soul_;
}
inline void PlayerStatBaseInfo::set_max_soul(::google::protobuf::int32 value) {
  set_has_max_soul();
  max_soul_ = value;
}

// -------------------------------------------------------------------

// EquipStrengthInfo

// optional int32 helmet = 1 [default = 0];
inline bool EquipStrengthInfo::has_helmet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipStrengthInfo::set_has_helmet() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipStrengthInfo::clear_has_helmet() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipStrengthInfo::clear_helmet() {
  helmet_ = 0;
  clear_has_helmet();
}
inline ::google::protobuf::int32 EquipStrengthInfo::helmet() const {
  return helmet_;
}
inline void EquipStrengthInfo::set_helmet(::google::protobuf::int32 value) {
  set_has_helmet();
  helmet_ = value;
}

// optional int32 helmet_level = 2 [default = 0];
inline bool EquipStrengthInfo::has_helmet_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipStrengthInfo::set_has_helmet_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipStrengthInfo::clear_has_helmet_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipStrengthInfo::clear_helmet_level() {
  helmet_level_ = 0;
  clear_has_helmet_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::helmet_level() const {
  return helmet_level_;
}
inline void EquipStrengthInfo::set_helmet_level(::google::protobuf::int32 value) {
  set_has_helmet_level();
  helmet_level_ = value;
}

// optional int32 necklace = 3 [default = 0];
inline bool EquipStrengthInfo::has_necklace() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipStrengthInfo::set_has_necklace() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipStrengthInfo::clear_has_necklace() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipStrengthInfo::clear_necklace() {
  necklace_ = 0;
  clear_has_necklace();
}
inline ::google::protobuf::int32 EquipStrengthInfo::necklace() const {
  return necklace_;
}
inline void EquipStrengthInfo::set_necklace(::google::protobuf::int32 value) {
  set_has_necklace();
  necklace_ = value;
}

// optional int32 necklace_level = 4 [default = 0];
inline bool EquipStrengthInfo::has_necklace_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipStrengthInfo::set_has_necklace_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipStrengthInfo::clear_has_necklace_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipStrengthInfo::clear_necklace_level() {
  necklace_level_ = 0;
  clear_has_necklace_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::necklace_level() const {
  return necklace_level_;
}
inline void EquipStrengthInfo::set_necklace_level(::google::protobuf::int32 value) {
  set_has_necklace_level();
  necklace_level_ = value;
}

// optional int32 shoulder_guards = 7 [default = 0];
inline bool EquipStrengthInfo::has_shoulder_guards() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipStrengthInfo::set_has_shoulder_guards() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipStrengthInfo::clear_has_shoulder_guards() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipStrengthInfo::clear_shoulder_guards() {
  shoulder_guards_ = 0;
  clear_has_shoulder_guards();
}
inline ::google::protobuf::int32 EquipStrengthInfo::shoulder_guards() const {
  return shoulder_guards_;
}
inline void EquipStrengthInfo::set_shoulder_guards(::google::protobuf::int32 value) {
  set_has_shoulder_guards();
  shoulder_guards_ = value;
}

// optional int32 shoulder_guards_level = 8 [default = 0];
inline bool EquipStrengthInfo::has_shoulder_guards_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquipStrengthInfo::set_has_shoulder_guards_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquipStrengthInfo::clear_has_shoulder_guards_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquipStrengthInfo::clear_shoulder_guards_level() {
  shoulder_guards_level_ = 0;
  clear_has_shoulder_guards_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::shoulder_guards_level() const {
  return shoulder_guards_level_;
}
inline void EquipStrengthInfo::set_shoulder_guards_level(::google::protobuf::int32 value) {
  set_has_shoulder_guards_level();
  shoulder_guards_level_ = value;
}

// optional int32 armor = 9 [default = 0];
inline bool EquipStrengthInfo::has_armor() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EquipStrengthInfo::set_has_armor() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EquipStrengthInfo::clear_has_armor() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EquipStrengthInfo::clear_armor() {
  armor_ = 0;
  clear_has_armor();
}
inline ::google::protobuf::int32 EquipStrengthInfo::armor() const {
  return armor_;
}
inline void EquipStrengthInfo::set_armor(::google::protobuf::int32 value) {
  set_has_armor();
  armor_ = value;
}

// optional int32 armor_level = 10 [default = 0];
inline bool EquipStrengthInfo::has_armor_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EquipStrengthInfo::set_has_armor_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EquipStrengthInfo::clear_has_armor_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EquipStrengthInfo::clear_armor_level() {
  armor_level_ = 0;
  clear_has_armor_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::armor_level() const {
  return armor_level_;
}
inline void EquipStrengthInfo::set_armor_level(::google::protobuf::int32 value) {
  set_has_armor_level();
  armor_level_ = value;
}

// optional int32 waistband = 11 [default = 0];
inline bool EquipStrengthInfo::has_waistband() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EquipStrengthInfo::set_has_waistband() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EquipStrengthInfo::clear_has_waistband() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EquipStrengthInfo::clear_waistband() {
  waistband_ = 0;
  clear_has_waistband();
}
inline ::google::protobuf::int32 EquipStrengthInfo::waistband() const {
  return waistband_;
}
inline void EquipStrengthInfo::set_waistband(::google::protobuf::int32 value) {
  set_has_waistband();
  waistband_ = value;
}

// optional int32 waistband_level = 12 [default = 0];
inline bool EquipStrengthInfo::has_waistband_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EquipStrengthInfo::set_has_waistband_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EquipStrengthInfo::clear_has_waistband_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EquipStrengthInfo::clear_waistband_level() {
  waistband_level_ = 0;
  clear_has_waistband_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::waistband_level() const {
  return waistband_level_;
}
inline void EquipStrengthInfo::set_waistband_level(::google::protobuf::int32 value) {
  set_has_waistband_level();
  waistband_level_ = value;
}

// optional int32 weapon = 13 [default = 0];
inline bool EquipStrengthInfo::has_weapon() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EquipStrengthInfo::set_has_weapon() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EquipStrengthInfo::clear_has_weapon() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EquipStrengthInfo::clear_weapon() {
  weapon_ = 0;
  clear_has_weapon();
}
inline ::google::protobuf::int32 EquipStrengthInfo::weapon() const {
  return weapon_;
}
inline void EquipStrengthInfo::set_weapon(::google::protobuf::int32 value) {
  set_has_weapon();
  weapon_ = value;
}

// optional int32 weapon_level = 14 [default = 0];
inline bool EquipStrengthInfo::has_weapon_level() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EquipStrengthInfo::set_has_weapon_level() {
  _has_bits_[0] |= 0x00000800u;
}
inline void EquipStrengthInfo::clear_has_weapon_level() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void EquipStrengthInfo::clear_weapon_level() {
  weapon_level_ = 0;
  clear_has_weapon_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::weapon_level() const {
  return weapon_level_;
}
inline void EquipStrengthInfo::set_weapon_level(::google::protobuf::int32 value) {
  set_has_weapon_level();
  weapon_level_ = value;
}

// optional int32 assist_weapon = 25 [default = 0];
inline bool EquipStrengthInfo::has_assist_weapon() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EquipStrengthInfo::set_has_assist_weapon() {
  _has_bits_[0] |= 0x00001000u;
}
inline void EquipStrengthInfo::clear_has_assist_weapon() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void EquipStrengthInfo::clear_assist_weapon() {
  assist_weapon_ = 0;
  clear_has_assist_weapon();
}
inline ::google::protobuf::int32 EquipStrengthInfo::assist_weapon() const {
  return assist_weapon_;
}
inline void EquipStrengthInfo::set_assist_weapon(::google::protobuf::int32 value) {
  set_has_assist_weapon();
  assist_weapon_ = value;
}

// optional int32 assist_weapon_level = 26 [default = 0];
inline bool EquipStrengthInfo::has_assist_weapon_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void EquipStrengthInfo::set_has_assist_weapon_level() {
  _has_bits_[0] |= 0x00002000u;
}
inline void EquipStrengthInfo::clear_has_assist_weapon_level() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void EquipStrengthInfo::clear_assist_weapon_level() {
  assist_weapon_level_ = 0;
  clear_has_assist_weapon_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::assist_weapon_level() const {
  return assist_weapon_level_;
}
inline void EquipStrengthInfo::set_assist_weapon_level(::google::protobuf::int32 value) {
  set_has_assist_weapon_level();
  assist_weapon_level_ = value;
}

// optional int32 gloves = 15 [default = 0];
inline bool EquipStrengthInfo::has_gloves() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void EquipStrengthInfo::set_has_gloves() {
  _has_bits_[0] |= 0x00004000u;
}
inline void EquipStrengthInfo::clear_has_gloves() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void EquipStrengthInfo::clear_gloves() {
  gloves_ = 0;
  clear_has_gloves();
}
inline ::google::protobuf::int32 EquipStrengthInfo::gloves() const {
  return gloves_;
}
inline void EquipStrengthInfo::set_gloves(::google::protobuf::int32 value) {
  set_has_gloves();
  gloves_ = value;
}

// optional int32 gloves_level = 16 [default = 0];
inline bool EquipStrengthInfo::has_gloves_level() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void EquipStrengthInfo::set_has_gloves_level() {
  _has_bits_[0] |= 0x00008000u;
}
inline void EquipStrengthInfo::clear_has_gloves_level() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void EquipStrengthInfo::clear_gloves_level() {
  gloves_level_ = 0;
  clear_has_gloves_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::gloves_level() const {
  return gloves_level_;
}
inline void EquipStrengthInfo::set_gloves_level(::google::protobuf::int32 value) {
  set_has_gloves_level();
  gloves_level_ = value;
}

// optional int32 wrist_band = 17 [default = 0];
inline bool EquipStrengthInfo::has_wrist_band() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void EquipStrengthInfo::set_has_wrist_band() {
  _has_bits_[0] |= 0x00010000u;
}
inline void EquipStrengthInfo::clear_has_wrist_band() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void EquipStrengthInfo::clear_wrist_band() {
  wrist_band_ = 0;
  clear_has_wrist_band();
}
inline ::google::protobuf::int32 EquipStrengthInfo::wrist_band() const {
  return wrist_band_;
}
inline void EquipStrengthInfo::set_wrist_band(::google::protobuf::int32 value) {
  set_has_wrist_band();
  wrist_band_ = value;
}

// optional int32 wrist_level = 18 [default = 0];
inline bool EquipStrengthInfo::has_wrist_level() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void EquipStrengthInfo::set_has_wrist_level() {
  _has_bits_[0] |= 0x00020000u;
}
inline void EquipStrengthInfo::clear_has_wrist_level() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void EquipStrengthInfo::clear_wrist_level() {
  wrist_level_ = 0;
  clear_has_wrist_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::wrist_level() const {
  return wrist_level_;
}
inline void EquipStrengthInfo::set_wrist_level(::google::protobuf::int32 value) {
  set_has_wrist_level();
  wrist_level_ = value;
}

// optional int32 ring_1_id = 19 [default = 0];
inline bool EquipStrengthInfo::has_ring_1_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void EquipStrengthInfo::set_has_ring_1_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void EquipStrengthInfo::clear_has_ring_1_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void EquipStrengthInfo::clear_ring_1_id() {
  ring_1_id_ = 0;
  clear_has_ring_1_id();
}
inline ::google::protobuf::int32 EquipStrengthInfo::ring_1_id() const {
  return ring_1_id_;
}
inline void EquipStrengthInfo::set_ring_1_id(::google::protobuf::int32 value) {
  set_has_ring_1_id();
  ring_1_id_ = value;
}

// optional int32 ring_1_level = 20 [default = 0];
inline bool EquipStrengthInfo::has_ring_1_level() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void EquipStrengthInfo::set_has_ring_1_level() {
  _has_bits_[0] |= 0x00080000u;
}
inline void EquipStrengthInfo::clear_has_ring_1_level() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void EquipStrengthInfo::clear_ring_1_level() {
  ring_1_level_ = 0;
  clear_has_ring_1_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::ring_1_level() const {
  return ring_1_level_;
}
inline void EquipStrengthInfo::set_ring_1_level(::google::protobuf::int32 value) {
  set_has_ring_1_level();
  ring_1_level_ = value;
}

// optional int32 ring_2_id = 21 [default = 0];
inline bool EquipStrengthInfo::has_ring_2_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void EquipStrengthInfo::set_has_ring_2_id() {
  _has_bits_[0] |= 0x00100000u;
}
inline void EquipStrengthInfo::clear_has_ring_2_id() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void EquipStrengthInfo::clear_ring_2_id() {
  ring_2_id_ = 0;
  clear_has_ring_2_id();
}
inline ::google::protobuf::int32 EquipStrengthInfo::ring_2_id() const {
  return ring_2_id_;
}
inline void EquipStrengthInfo::set_ring_2_id(::google::protobuf::int32 value) {
  set_has_ring_2_id();
  ring_2_id_ = value;
}

// optional int32 ring_2_level = 22 [default = 0];
inline bool EquipStrengthInfo::has_ring_2_level() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void EquipStrengthInfo::set_has_ring_2_level() {
  _has_bits_[0] |= 0x00200000u;
}
inline void EquipStrengthInfo::clear_has_ring_2_level() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void EquipStrengthInfo::clear_ring_2_level() {
  ring_2_level_ = 0;
  clear_has_ring_2_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::ring_2_level() const {
  return ring_2_level_;
}
inline void EquipStrengthInfo::set_ring_2_level(::google::protobuf::int32 value) {
  set_has_ring_2_level();
  ring_2_level_ = value;
}

// optional int32 shoes = 23 [default = 0];
inline bool EquipStrengthInfo::has_shoes() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void EquipStrengthInfo::set_has_shoes() {
  _has_bits_[0] |= 0x00400000u;
}
inline void EquipStrengthInfo::clear_has_shoes() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void EquipStrengthInfo::clear_shoes() {
  shoes_ = 0;
  clear_has_shoes();
}
inline ::google::protobuf::int32 EquipStrengthInfo::shoes() const {
  return shoes_;
}
inline void EquipStrengthInfo::set_shoes(::google::protobuf::int32 value) {
  set_has_shoes();
  shoes_ = value;
}

// optional int32 shoes_level = 24 [default = 0];
inline bool EquipStrengthInfo::has_shoes_level() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void EquipStrengthInfo::set_has_shoes_level() {
  _has_bits_[0] |= 0x00800000u;
}
inline void EquipStrengthInfo::clear_has_shoes_level() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void EquipStrengthInfo::clear_shoes_level() {
  shoes_level_ = 0;
  clear_has_shoes_level();
}
inline ::google::protobuf::int32 EquipStrengthInfo::shoes_level() const {
  return shoes_level_;
}
inline void EquipStrengthInfo::set_shoes_level(::google::protobuf::int32 value) {
  set_has_shoes_level();
  shoes_level_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace statistics
}  // namespace protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_stat_5fdata_2eproto__INCLUDED
